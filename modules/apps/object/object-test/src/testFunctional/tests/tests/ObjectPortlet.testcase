@component-name = "portal-object"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ObjectAdmin.deleteAllCustomObjectsViaAPI();
		}
	}

	@description = "LPS-135393 - Verify there is an alert message when trying to delete an entry on the auto-generated table on the Custom Object Portlet"
	@ignore = "Test Stub"
	@priority = "4"
	test AlertMessageDisplayedWhenDeleteEntry {

		// TODO LPS-138960 AlertMessageDisplayedWhenDeleteEntry pending implementation

	}

	@description = "LPS-135393 - Verify that a Big Decimal entry is correctly displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "4"
	test BigDecimalDisplayedOnAutoGeneratedTable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "BigDecimal",
			fieldName = "customObjectField",
			fieldType = "BigDecimal",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject",
			value = "123.123456");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.viewEntry(entry = "123.123456");
	}

	@description = "LPS-135393 - Verify that a Boolean entry is correctly displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "4"
	test BooleanDisplayedOnAutoGeneratedTable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Boolean",
			fieldName = "customObjectField",
			fieldType = "Boolean",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject",
			value = "true");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.viewEntry(entry = "Yes");
	}

	@description = "LPS-135393 - Verify that is possible to change what columns to be displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "3"
	test CanChangeColumnsToBeDisplayed {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Text",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "text",
			objectName = "CustomObject",
			value = "Test text");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.checkUncheckColumnsDisplayed(dropdowntItem = "ID");

		ObjectPortlet.assertEntryColumnNotPresent(column = "ID");
	}

	@description = "LPS-135393 - Verify that is possible to delete an entry on the auto-generated table on the Custom Object Portlet"
	@priority = "5"
	test CanDeleteEntry {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Text",
			fieldName = "text",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "text",
			objectName = "CustomObject",
			value = "Test text");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");
		ObjectPortlet.viewEntry(entry = "Test text");

		ObjectPortlet.deleteEntry(entry = "Test text");
		ObjectPortlet.assertEntryNotPresent(entry = "Test text");
	}

	@description = "LPS-135393 - Verify that is possible to order the auto-generated table by an entry on the Custom Object Portlet"
	@priority = "3"
	test CanOrderTable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Text",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		for (var number : list "1,2") {
			ObjectAdmin.addObjectSingleFieldEntryViaAPI(
				fieldName = "customObjectField",
				objectName = "CustomObject",
				value = "Test text ${number}");
		}

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.sortField(sortFieldName = "Text");

		ObjectPortlet.assertFilterResultsSpecificOrder(entry = "Test text 1,Test text 2");

		ObjectPortlet.sortField(sortFieldName = "Text");

		ObjectPortlet.assertFilterResultsSpecificOrder(entry = "Test text 2,Test text 1");
	}

	@description = "LPS-135393 - Verify that is possible to search for an entry on the auto-generated table on the Custom Object Portlet"
	@priority = "5"
	test CanSeachEntry {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Text",
			fieldName = "text",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "text",
			objectName = "CustomObject",
			value = "Test 1");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "text",
			objectName = "CustomObject",
			value = "Entry 2");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.searchEntry(entryName = "Entry 2");

		ObjectPortlet.viewEntry(entry = "Entry 2");

		ObjectPortlet.assertEntryNotPresent(entry = "Test 1");
	}

	@description = "LPS-135393 - Verify that is possible to search for a field on the dropdown to select the columns to be displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "3"
	test CanSearchForFieldOnDropdownToSelectColumns {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Field",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "text",
			objectName = "CustomObject",
			value = "Test text");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.searchColumn(columnName = "Field");

		ObjectPortlet.assertMenuItemColumn(dropdowntItem = "Field");


		
	}

	@description = "LPS-135393 - Verify that the columns ID, Field(s) and Workflow Status are displayed"
	@ignore = "Test Stub"
	@priority = "5"
	test ColumnsAreDisplayed {
		property portal.acceptance = "true";

		// TODO LPS-138947 ColumnsAreDisplayed pending implementation

	}

	@description = "LPS-135393 - Verify that a Date entry is correctly displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "4"
	test DateDisplayedOnAutoGeneratedTable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Date",
			fieldName = "customObjectField",
			fieldType = "Date",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject",
			value = "2021-09-23");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.viewEntry(entry = "2021-09-23");
	}

	@description = "LPS-135393 - Verify that a Double entry is correctly displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "4"
	test DoubleDisplayedOnAutoGeneratedTable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Double",
			fieldName = "customObjectField",
			fieldType = "Double",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject",
			value = "1.54");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.viewEntry(entry = "1.54");
	}

	@description = "LPS-135393 - Verify the empty state when searching for a value that does not exist on the auto-generated table on the Custom Object Portlet"
	@ignore = "Test Stub"
	@priority = "3"
	test EmptyStateDisplayedForSearch {

		// TODO LPS-138958 EmptyStateDisplayedForSearch pending implementation

	}

	@description = "LPS-135393 - Verify the empty state when searching for a value that does not exist on the dropdown to select the columns to be displayed on the auto-generated table on the Custom Object Portlet"
	@ignore = "Test Stub"
	@priority = "3"
	test EmptyStateDisplayedForSearchOnDropdownToSelectColumns {

		// TODO LPS-138965 EmptyStateDisplayedForSearchOnDropdownToSelectColumns pending implementation

	}

	@description = "LPS-135393 - Verify if the empty state is displayed when there is no entry on the Custom Object Portlet"
	@ignore = "Test Stub"
	@priority = "4"
	test EmptyStateIsDisplayedWhenNoEntry {

		// TODO LPS-EmptyStateIsDisplayedWhenNoEntry TBD pending implementation

	}

	@description = "LPS-135393 - Verify that an Integer entry is correctly displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "4"
	test IntegerDisplayedOnAutoGeneratedTable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Integer",
			fieldName = "customObjectField",
			fieldType = "Integer",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject",
			value = "123456789");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.viewEntry(entry = "123456789");
	}

	@description = "LPS-135393 - Verify that a Long entry is correctly displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "4"
	test LongDisplayedOnAutoGeneratedTable {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Long",
			fieldName = "customObjectField",
			fieldType = "Long",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject",
			value = "12345678912345678");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.viewEntry(entry = "12345678912345678");
	}

	@description = "LPS-135393 - Verify that a String entry is correctly displayed on the auto-generated table on the Custom Object Portlet"
	@priority = "5"
	test StringDisplayedOnAutoGeneratedTable {
		property portal.acceptance = "true";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Text",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject",
			value = "Test text Test text Test text Test text Test text Test text Test text  Test");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.viewEntry(entry = "Test text Test text Test text Test text Test text Test text Test text  Test");
	}

	@description = "LPS-135393 - Verify the table is updated when changing a page on the Custom Object Portlet"
	@priority = "3"
	test TableUpdatedWhenChangingPage {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Text",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		for (var number : list "1,2,3,4,5") {
			ObjectAdmin.addObjectSingleFieldEntryViaAPI(
				fieldName = "customObjectField",
				objectName = "CustomObject",
				value = "Test text ${number}");
		}

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.changePagination(itemsPerPage = "4 items");

		ObjectPortlet.checkAnyPage(pageNumber = "2");

		ObjectPortlet.viewEntry(entry = "Test text 5");

		ObjectPortlet.assertEntryNotPresent(entry = "Test text 1");

		ObjectPortlet.assertEntryNotPresent(entry = "Test text 2");

		ObjectPortlet.assertEntryNotPresent(entry = "Test text 3");

		ObjectPortlet.assertEntryNotPresent(entry = "Test text 4");
	}

	@description = "LPS-135393 - Verify the table is updated when changing the pagination number on the Custom Object Portlet"
	@priority = "3"
	test TableUpdatedWhenChangingPaginationNumber {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object",
			objectName = "CustomObject",
			pluralLabelName = "Custom Objects");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldLabelName = "Text",
			fieldName = "customObjectField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject");

		for (var number : list "1,2,3,4,5,6,7,8") {
			ObjectAdmin.addObjectSingleFieldEntryViaAPI(
				fieldName = "customObjectField",
				objectName = "CustomObject",
				value = "Test text ${number}");
		}

		ObjectAdmin.goToCustomObject(objectName = "CustomObject");

		ObjectPortlet.changePagination(itemsPerPage = "4 items");

		ObjectPortlet.viewEntry(entry = "Test text 1");
		ObjectPortlet.viewEntry(entry = "Test text 2");
		ObjectPortlet.viewEntry(entry = "Test text 3");
		ObjectPortlet.viewEntry(entry = "Test text 4");
		ObjectPortlet.assertEntryNotPresent(entry = "Test text 5");
		ObjectPortlet.assertEntryNotPresent(entry = "Test text 6");
		ObjectPortlet.assertEntryNotPresent(entry = "Test text 7");
		ObjectPortlet.assertEntryNotPresent(entry = "Test text 8");
	}

}